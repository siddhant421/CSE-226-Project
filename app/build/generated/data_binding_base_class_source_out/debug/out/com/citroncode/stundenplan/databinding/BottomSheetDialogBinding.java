// Generated by view binder compiler. Do not edit!
package com.citroncode.stundenplan.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.citroncode.stundenplan.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnColor;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final EditText etRoom;

  @NonNull
  public final EditText etSubject;

  @NonNull
  public final EditText etTeacher;

  @NonNull
  public final ImageView ivBook;

  @NonNull
  public final ImageView ivColor;

  @NonNull
  public final ImageView ivRoom;

  @NonNull
  public final ImageView ivTeacher;

  @NonNull
  public final Spinner spDay;

  @NonNull
  public final Spinner spHour;

  private BottomSheetDialogBinding(@NonNull LinearLayout rootView, @NonNull Button btnColor,
      @NonNull Button btnSave, @NonNull EditText etRoom, @NonNull EditText etSubject,
      @NonNull EditText etTeacher, @NonNull ImageView ivBook, @NonNull ImageView ivColor,
      @NonNull ImageView ivRoom, @NonNull ImageView ivTeacher, @NonNull Spinner spDay,
      @NonNull Spinner spHour) {
    this.rootView = rootView;
    this.btnColor = btnColor;
    this.btnSave = btnSave;
    this.etRoom = etRoom;
    this.etSubject = etSubject;
    this.etTeacher = etTeacher;
    this.ivBook = ivBook;
    this.ivColor = ivColor;
    this.ivRoom = ivRoom;
    this.ivTeacher = ivTeacher;
    this.spDay = spDay;
    this.spHour = spHour;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_color;
      Button btnColor = ViewBindings.findChildViewById(rootView, id);
      if (btnColor == null) {
        break missingId;
      }

      id = R.id.btn_save;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.et_room;
      EditText etRoom = ViewBindings.findChildViewById(rootView, id);
      if (etRoom == null) {
        break missingId;
      }

      id = R.id.et_subject;
      EditText etSubject = ViewBindings.findChildViewById(rootView, id);
      if (etSubject == null) {
        break missingId;
      }

      id = R.id.et_teacher;
      EditText etTeacher = ViewBindings.findChildViewById(rootView, id);
      if (etTeacher == null) {
        break missingId;
      }

      id = R.id.iv_book;
      ImageView ivBook = ViewBindings.findChildViewById(rootView, id);
      if (ivBook == null) {
        break missingId;
      }

      id = R.id.iv_color;
      ImageView ivColor = ViewBindings.findChildViewById(rootView, id);
      if (ivColor == null) {
        break missingId;
      }

      id = R.id.iv_room;
      ImageView ivRoom = ViewBindings.findChildViewById(rootView, id);
      if (ivRoom == null) {
        break missingId;
      }

      id = R.id.iv_teacher;
      ImageView ivTeacher = ViewBindings.findChildViewById(rootView, id);
      if (ivTeacher == null) {
        break missingId;
      }

      id = R.id.sp_day;
      Spinner spDay = ViewBindings.findChildViewById(rootView, id);
      if (spDay == null) {
        break missingId;
      }

      id = R.id.sp_hour;
      Spinner spHour = ViewBindings.findChildViewById(rootView, id);
      if (spHour == null) {
        break missingId;
      }

      return new BottomSheetDialogBinding((LinearLayout) rootView, btnColor, btnSave, etRoom,
          etSubject, etTeacher, ivBook, ivColor, ivRoom, ivTeacher, spDay, spHour);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
